insertMember(ending, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(semicolon, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(functionKey, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(identifierFunc, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(leftPar, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(identifierVar, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(floatLiteral, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(stringLiteral, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(integerLiteral, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(nullKey, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(ifKey, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(whileKey, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(returnKey, S, 2,
		partOfRulesRightSide(ProgramBody),
		partOfRulesRightSide(ending));
insertMember(ending, ProgramBody, 0);
insertMember(semicolon, ProgramBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(ProgramBody));
insertMember(functionKey, ProgramBody, 2,
		partOfRulesRightSide(FceDefine),
		partOfRulesRightSide(ProgramBody));
insertMember(identifierFunc, ProgramBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(ProgramBody));
insertMember(leftPar, ProgramBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(ProgramBody));
insertMember(identifierVar, ProgramBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(ProgramBody));
insertMember(floatLiteral, ProgramBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(ProgramBody));
insertMember(stringLiteral, ProgramBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(ProgramBody));
insertMember(integerLiteral, ProgramBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(ProgramBody));
insertMember(nullKey, ProgramBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(ProgramBody));
insertMember(ifKey, ProgramBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(ProgramBody));
insertMember(whileKey, ProgramBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(ProgramBody));
insertMember(returnKey, ProgramBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(ProgramBody));
insertMember(semicolon, Command, 1,
		partOfRulesRightSide(semicolon));
insertMember(identifierFunc, Command, 1,
		partOfRulesRightSide(FceCall));
insertMember(leftPar, Command, 2,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(semicolon));
insertMember(identifierVar, Command, 1,
		partOfRulesRightSide(DeclareVariable));
insertMember(identifierVar, Command, 2,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(semicolon));
insertMember(floatLiteral, Command, 2,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(semicolon));
insertMember(stringLiteral, Command, 2,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(semicolon));
insertMember(integerLiteral, Command, 2,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(semicolon));
insertMember(nullKey, Command, 2,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(semicolon));
insertMember(ifKey, Command, 1,
		partOfRulesRightSide(Condition));
insertMember(whileKey, Command, 1,
		partOfRulesRightSide(While));
insertMember(returnKey, Command, 1,
		partOfRulesRightSide(Return));
insertMember(functionKey, FceDefine, 5,
		partOfRulesRightSide(functionKey),
		partOfRulesRightSide(FceHeader),
		partOfRulesRightSide(curlyBraceLeft),
		partOfRulesRightSide(FunctionBody),
		partOfRulesRightSide(curlyBraceRight));
insertMember(identifierFunc, FceHeader, 6,
		partOfRulesRightSide(identifierFunc),
		partOfRulesRightSide(leftPar),
		partOfRulesRightSide(FunctionDeclareParams),
		partOfRulesRightSide(rightPar),
		partOfRulesRightSide(colon),
		partOfRulesRightSide(FuncReturnColonType));
insertMember(rightPar, FunctionDeclareParams, 0);
insertMember(stringNullKey, FunctionDeclareParams, 3,
		partOfRulesRightSide(DataType),
		partOfRulesRightSide(DeclareParam),
		partOfRulesRightSide(CommaOrEpsParams));
insertMember(floatNullKey, FunctionDeclareParams, 3,
		partOfRulesRightSide(DataType),
		partOfRulesRightSide(DeclareParam),
		partOfRulesRightSide(CommaOrEpsParams));
insertMember(intNullKey, FunctionDeclareParams, 3,
		partOfRulesRightSide(DataType),
		partOfRulesRightSide(DeclareParam),
		partOfRulesRightSide(CommaOrEpsParams));
insertMember(stringKey, FunctionDeclareParams, 3,
		partOfRulesRightSide(DataType),
		partOfRulesRightSide(DeclareParam),
		partOfRulesRightSide(CommaOrEpsParams));
insertMember(floatKey, FunctionDeclareParams, 3,
		partOfRulesRightSide(DataType),
		partOfRulesRightSide(DeclareParam),
		partOfRulesRightSide(CommaOrEpsParams));
insertMember(intKey, FunctionDeclareParams, 3,
		partOfRulesRightSide(DataType),
		partOfRulesRightSide(DeclareParam),
		partOfRulesRightSide(CommaOrEpsParams));
insertMember(rightPar, CommaOrEpsParams, 0);
insertMember(comma, CommaOrEpsParams, 4,
		partOfRulesRightSide(comma),
		partOfRulesRightSide(DataType),
		partOfRulesRightSide(DeclareParam),
		partOfRulesRightSide(CommaOrEpsParams));
insertMember(identifierVar, DeclareParam, 1,
		partOfRulesRightSide(identifierVar));
insertMember(voidKey, FuncReturnColonType, 1,
		partOfRulesRightSide(voidKey));
insertMember(stringNullKey, FuncReturnColonType, 1,
		partOfRulesRightSide(DataType));
insertMember(floatNullKey, FuncReturnColonType, 1,
		partOfRulesRightSide(DataType));
insertMember(intNullKey, FuncReturnColonType, 1,
		partOfRulesRightSide(DataType));
insertMember(stringKey, FuncReturnColonType, 1,
		partOfRulesRightSide(DataType));
insertMember(floatKey, FuncReturnColonType, 1,
		partOfRulesRightSide(DataType));
insertMember(intKey, FuncReturnColonType, 1,
		partOfRulesRightSide(DataType));
insertMember(identifierFunc, FceCall, 4,
		partOfRulesRightSide(identifierFunc),
		partOfRulesRightSide(leftPar),
		partOfRulesRightSide(FirstFceParam),
		partOfRulesRightSide(rightPar));
insertMember(rightPar, FirstFceParam, 0);
insertMember(identifierVar, FirstFceParam, 2,
		partOfRulesRightSide(Statement),
		partOfRulesRightSide(CommaOrEpsParam));
insertMember(floatLiteral, FirstFceParam, 2,
		partOfRulesRightSide(Statement),
		partOfRulesRightSide(CommaOrEpsParam));
insertMember(stringLiteral, FirstFceParam, 2,
		partOfRulesRightSide(Statement),
		partOfRulesRightSide(CommaOrEpsParam));
insertMember(integerLiteral, FirstFceParam, 2,
		partOfRulesRightSide(Statement),
		partOfRulesRightSide(CommaOrEpsParam));
insertMember(rightPar, CommaOrEpsParam, 0);
insertMember(comma, CommaOrEpsParam, 3,
		partOfRulesRightSide(comma),
		partOfRulesRightSide(Statement),
		partOfRulesRightSide(CommaOrEpsParam));
insertMember(identifierVar, Statement, 1,
		partOfRulesRightSide(identifierVar));
insertMember(floatLiteral, Statement, 1,
		partOfRulesRightSide(floatLiteral));
insertMember(stringLiteral, Statement, 1,
		partOfRulesRightSide(stringLiteral));
insertMember(integerLiteral, Statement, 1,
		partOfRulesRightSide(integerLiteral));
insertMember(leftPar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(minusOp),
		partOfRulesRightSide(Exp));
insertMember(leftPar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(plusOp),
		partOfRulesRightSide(Exp));
insertMember(leftPar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(divisionOp),
		partOfRulesRightSide(Exp));
insertMember(leftPar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(multiplicationOp),
		partOfRulesRightSide(Exp));
insertMember(leftPar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(concatenationOp),
		partOfRulesRightSide(Exp));
insertMember(leftPar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(lesserThanOp),
		partOfRulesRightSide(Exp));
insertMember(leftPar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(lesserEqOp),
		partOfRulesRightSide(Exp));
insertMember(leftPar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(greaterThanOp),
		partOfRulesRightSide(Exp));
insertMember(leftPar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(greaterEqOp),
		partOfRulesRightSide(Exp));
insertMember(leftPar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(eqOp),
		partOfRulesRightSide(Exp));
insertMember(leftPar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(notEqOp),
		partOfRulesRightSide(Exp));
insertMember(leftPar, Exp, 3,
		partOfRulesRightSide(leftPar),
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(rightPar));
insertMember(identifierVar, Exp, 1,
		partOfRulesRightSide(Statement));
insertMember(identifierVar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(minusOp),
		partOfRulesRightSide(Exp));
insertMember(identifierVar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(plusOp),
		partOfRulesRightSide(Exp));
insertMember(identifierVar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(divisionOp),
		partOfRulesRightSide(Exp));
insertMember(identifierVar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(multiplicationOp),
		partOfRulesRightSide(Exp));
insertMember(identifierVar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(concatenationOp),
		partOfRulesRightSide(Exp));
insertMember(identifierVar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(lesserThanOp),
		partOfRulesRightSide(Exp));
insertMember(identifierVar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(lesserEqOp),
		partOfRulesRightSide(Exp));
insertMember(identifierVar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(greaterThanOp),
		partOfRulesRightSide(Exp));
insertMember(identifierVar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(greaterEqOp),
		partOfRulesRightSide(Exp));
insertMember(identifierVar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(eqOp),
		partOfRulesRightSide(Exp));
insertMember(identifierVar, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(notEqOp),
		partOfRulesRightSide(Exp));
insertMember(floatLiteral, Exp, 1,
		partOfRulesRightSide(Statement));
insertMember(floatLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(minusOp),
		partOfRulesRightSide(Exp));
insertMember(floatLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(plusOp),
		partOfRulesRightSide(Exp));
insertMember(floatLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(divisionOp),
		partOfRulesRightSide(Exp));
insertMember(floatLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(multiplicationOp),
		partOfRulesRightSide(Exp));
insertMember(floatLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(concatenationOp),
		partOfRulesRightSide(Exp));
insertMember(floatLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(lesserThanOp),
		partOfRulesRightSide(Exp));
insertMember(floatLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(lesserEqOp),
		partOfRulesRightSide(Exp));
insertMember(floatLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(greaterThanOp),
		partOfRulesRightSide(Exp));
insertMember(floatLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(greaterEqOp),
		partOfRulesRightSide(Exp));
insertMember(floatLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(eqOp),
		partOfRulesRightSide(Exp));
insertMember(floatLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(notEqOp),
		partOfRulesRightSide(Exp));
insertMember(stringLiteral, Exp, 1,
		partOfRulesRightSide(Statement));
insertMember(stringLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(minusOp),
		partOfRulesRightSide(Exp));
insertMember(stringLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(plusOp),
		partOfRulesRightSide(Exp));
insertMember(stringLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(divisionOp),
		partOfRulesRightSide(Exp));
insertMember(stringLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(multiplicationOp),
		partOfRulesRightSide(Exp));
insertMember(stringLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(concatenationOp),
		partOfRulesRightSide(Exp));
insertMember(stringLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(lesserThanOp),
		partOfRulesRightSide(Exp));
insertMember(stringLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(lesserEqOp),
		partOfRulesRightSide(Exp));
insertMember(stringLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(greaterThanOp),
		partOfRulesRightSide(Exp));
insertMember(stringLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(greaterEqOp),
		partOfRulesRightSide(Exp));
insertMember(stringLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(eqOp),
		partOfRulesRightSide(Exp));
insertMember(stringLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(notEqOp),
		partOfRulesRightSide(Exp));
insertMember(integerLiteral, Exp, 1,
		partOfRulesRightSide(Statement));
insertMember(integerLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(minusOp),
		partOfRulesRightSide(Exp));
insertMember(integerLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(plusOp),
		partOfRulesRightSide(Exp));
insertMember(integerLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(divisionOp),
		partOfRulesRightSide(Exp));
insertMember(integerLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(multiplicationOp),
		partOfRulesRightSide(Exp));
insertMember(integerLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(concatenationOp),
		partOfRulesRightSide(Exp));
insertMember(integerLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(lesserThanOp),
		partOfRulesRightSide(Exp));
insertMember(integerLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(lesserEqOp),
		partOfRulesRightSide(Exp));
insertMember(integerLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(greaterThanOp),
		partOfRulesRightSide(Exp));
insertMember(integerLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(greaterEqOp),
		partOfRulesRightSide(Exp));
insertMember(integerLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(eqOp),
		partOfRulesRightSide(Exp));
insertMember(integerLiteral, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(notEqOp),
		partOfRulesRightSide(Exp));
insertMember(nullKey, Exp, 2,
		partOfRulesRightSide(nullKey),
		partOfRulesRightSide(Exp));
insertMember(nullKey, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(minusOp),
		partOfRulesRightSide(Exp));
insertMember(nullKey, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(plusOp),
		partOfRulesRightSide(Exp));
insertMember(nullKey, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(divisionOp),
		partOfRulesRightSide(Exp));
insertMember(nullKey, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(multiplicationOp),
		partOfRulesRightSide(Exp));
insertMember(nullKey, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(concatenationOp),
		partOfRulesRightSide(Exp));
insertMember(nullKey, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(lesserThanOp),
		partOfRulesRightSide(Exp));
insertMember(nullKey, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(lesserEqOp),
		partOfRulesRightSide(Exp));
insertMember(nullKey, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(greaterThanOp),
		partOfRulesRightSide(Exp));
insertMember(nullKey, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(greaterEqOp),
		partOfRulesRightSide(Exp));
insertMember(nullKey, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(eqOp),
		partOfRulesRightSide(Exp));
insertMember(nullKey, Exp, 3,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(notEqOp),
		partOfRulesRightSide(Exp));
insertMember(stringNullKey, DataType, 1,
		partOfRulesRightSide(stringNullKey));
insertMember(floatNullKey, DataType, 1,
		partOfRulesRightSide(floatNullKey));
insertMember(intNullKey, DataType, 1,
		partOfRulesRightSide(intNullKey));
insertMember(stringKey, DataType, 1,
		partOfRulesRightSide(stringKey));
insertMember(floatKey, DataType, 1,
		partOfRulesRightSide(floatKey));
insertMember(intKey, DataType, 1,
		partOfRulesRightSide(intKey));
insertMember(identifierVar, DeclareVariable, 3,
		partOfRulesRightSide(identifierVar),
		partOfRulesRightSide(equals),
		partOfRulesRightSide(DefVarAss));
insertMember(identifierFunc, DefVarAss, 2,
		partOfRulesRightSide(FceCall),
		partOfRulesRightSide(semicolon));
insertMember(leftPar, DefVarAss, 2,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(semicolon));
insertMember(identifierVar, DefVarAss, 2,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(semicolon));
insertMember(floatLiteral, DefVarAss, 2,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(semicolon));
insertMember(stringLiteral, DefVarAss, 2,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(semicolon));
insertMember(integerLiteral, DefVarAss, 2,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(semicolon));
insertMember(nullKey, DefVarAss, 2,
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(semicolon));
insertMember(ifKey, Condition, 8,
		partOfRulesRightSide(ifKey),
		partOfRulesRightSide(leftPar),
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(rightPar),
		partOfRulesRightSide(curlyBraceLeft),
		partOfRulesRightSide(FunctionBody),
		partOfRulesRightSide(curlyBraceRight),
		partOfRulesRightSide(ElseCond));
insertMember(ending, ElseCond, 0);
insertMember(semicolon, ElseCond, 0);
insertMember(functionKey, ElseCond, 0);
insertMember(curlyBraceRight, ElseCond, 0);
insertMember(identifierFunc, ElseCond, 0);
insertMember(leftPar, ElseCond, 0);
insertMember(identifierVar, ElseCond, 0);
insertMember(floatLiteral, ElseCond, 0);
insertMember(stringLiteral, ElseCond, 0);
insertMember(integerLiteral, ElseCond, 0);
insertMember(nullKey, ElseCond, 0);
insertMember(ifKey, ElseCond, 0);
insertMember(elseKey, ElseCond, 4,
		partOfRulesRightSide(elseKey),
		partOfRulesRightSide(curlyBraceLeft),
		partOfRulesRightSide(FunctionBody),
		partOfRulesRightSide(curlyBraceRight));
insertMember(whileKey, ElseCond, 0);
insertMember(returnKey, ElseCond, 0);
insertMember(whileKey, While, 7,
		partOfRulesRightSide(whileKey),
		partOfRulesRightSide(leftPar),
		partOfRulesRightSide(Exp),
		partOfRulesRightSide(rightPar),
		partOfRulesRightSide(curlyBraceLeft),
		partOfRulesRightSide(FunctionBody),
		partOfRulesRightSide(curlyBraceRight));
insertMember(returnKey, Return, 3,
		partOfRulesRightSide(returnKey),
		partOfRulesRightSide(ReturnExp),
		partOfRulesRightSide(semicolon));
insertMember(semicolon, ReturnExp, 0);
insertMember(leftPar, ReturnExp, 1,
		partOfRulesRightSide(Exp));
insertMember(identifierVar, ReturnExp, 1,
		partOfRulesRightSide(Exp));
insertMember(floatLiteral, ReturnExp, 1,
		partOfRulesRightSide(Exp));
insertMember(stringLiteral, ReturnExp, 1,
		partOfRulesRightSide(Exp));
insertMember(integerLiteral, ReturnExp, 1,
		partOfRulesRightSide(Exp));
insertMember(nullKey, ReturnExp, 1,
		partOfRulesRightSide(Exp));
insertMember(semicolon, FunctionBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(FunctionBody));
insertMember(curlyBraceRight, FunctionBody, 0);
insertMember(identifierFunc, FunctionBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(FunctionBody));
insertMember(leftPar, FunctionBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(FunctionBody));
insertMember(identifierVar, FunctionBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(FunctionBody));
insertMember(floatLiteral, FunctionBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(FunctionBody));
insertMember(stringLiteral, FunctionBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(FunctionBody));
insertMember(integerLiteral, FunctionBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(FunctionBody));
insertMember(nullKey, FunctionBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(FunctionBody));
insertMember(ifKey, FunctionBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(FunctionBody));
insertMember(whileKey, FunctionBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(FunctionBody));
insertMember(returnKey, FunctionBody, 2,
		partOfRulesRightSide(Command),
		partOfRulesRightSide(FunctionBody));
