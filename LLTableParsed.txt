insertMember(ending, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(semicolon, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(functionKey, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(identifierFunc, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(leftPar, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(identifierVar, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(floatLiteral, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(stringLiteral, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(integerLiteral, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(nullKey, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(ifKey, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(whileKey, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(returnKey, S , 2, 
partOfRulesRightSide(ProgramBody), 
partOfRulesRightSide(ending));
insertMember(ending, ProgramBody , 0);
insertMember(semicolon, ProgramBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(ProgramBody));
insertMember(functionKey, ProgramBody , 2, 
partOfRulesRightSide(FceDefine), 
partOfRulesRightSide(ProgramBody));
insertMember(identifierFunc, ProgramBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(ProgramBody));
insertMember(leftPar, ProgramBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(ProgramBody));
insertMember(identifierVar, ProgramBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(ProgramBody));
insertMember(floatLiteral, ProgramBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(ProgramBody));
insertMember(stringLiteral, ProgramBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(ProgramBody));
insertMember(integerLiteral, ProgramBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(ProgramBody));
insertMember(nullKey, ProgramBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(ProgramBody));
insertMember(ifKey, ProgramBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(ProgramBody));
insertMember(whileKey, ProgramBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(ProgramBody));
insertMember(returnKey, ProgramBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(ProgramBody));
insertMember(semicolon, Command , 1, 
partOfRulesRightSide(semicolon));
insertMember(identifierFunc, Command , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(semicolon));
insertMember(leftPar, Command , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(semicolon));
insertMember(identifierVar, Command , 2, 
partOfRulesRightSide(DeclareVariable), 
partOfRulesRightSide(Command));
insertMember(floatLiteral, Command , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(semicolon));
insertMember(stringLiteral, Command , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(semicolon));
insertMember(integerLiteral, Command , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(semicolon));
insertMember(nullKey, Command , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(semicolon));
insertMember(ifKey, Command , 1, 
partOfRulesRightSide(Condition));
insertMember(whileKey, Command , 1, 
partOfRulesRightSide(While));
insertMember(returnKey, Command , 1, 
partOfRulesRightSide(Return));
insertMember(functionKey, FceDefine , 4, 
partOfRulesRightSide(FceHeader), 
partOfRulesRightSide(curlyBraceLeft), 
partOfRulesRightSide(FunctionBody), 
partOfRulesRightSide(curlyBraceRight));
insertMember(functionKey, FceHeader , 7, 
partOfRulesRightSide(functionKey), 
partOfRulesRightSide(identifierFunc), 
partOfRulesRightSide(leftPar), 
partOfRulesRightSide(FunctionDeclareParams), 
partOfRulesRightSide(rightPar), 
partOfRulesRightSide(colon), 
partOfRulesRightSide(FuncReturnColonType));
insertMember(rightPar, FunctionDeclareParams , 0);
insertMember(stringNullKey, FunctionDeclareParams , 2, 
partOfRulesRightSide(DeclareParam), 
partOfRulesRightSide(CommaOrEpsParams));
insertMember(floatNullKey, FunctionDeclareParams , 2, 
partOfRulesRightSide(DeclareParam), 
partOfRulesRightSide(CommaOrEpsParams));
insertMember(intNullKey, FunctionDeclareParams , 2, 
partOfRulesRightSide(DeclareParam), 
partOfRulesRightSide(CommaOrEpsParams));
insertMember(stringKey, FunctionDeclareParams , 2, 
partOfRulesRightSide(DeclareParam), 
partOfRulesRightSide(CommaOrEpsParams));
insertMember(floatKey, FunctionDeclareParams , 2, 
partOfRulesRightSide(DeclareParam), 
partOfRulesRightSide(CommaOrEpsParams));
insertMember(intKey, FunctionDeclareParams , 2, 
partOfRulesRightSide(DeclareParam), 
partOfRulesRightSide(CommaOrEpsParams));
insertMember(rightPar, CommaOrEpsParams , 0);
insertMember(comma, CommaOrEpsParams , 3, 
partOfRulesRightSide(comma), 
partOfRulesRightSide(DeclareParam), 
partOfRulesRightSide(CommaOrEpsParams));
insertMember(stringNullKey, DeclareParam , 2, 
partOfRulesRightSide(DataType), 
partOfRulesRightSide(identifierVar));
insertMember(floatNullKey, DeclareParam , 2, 
partOfRulesRightSide(DataType), 
partOfRulesRightSide(identifierVar));
insertMember(intNullKey, DeclareParam , 2, 
partOfRulesRightSide(DataType), 
partOfRulesRightSide(identifierVar));
insertMember(stringKey, DeclareParam , 2, 
partOfRulesRightSide(DataType), 
partOfRulesRightSide(identifierVar));
insertMember(floatKey, DeclareParam , 2, 
partOfRulesRightSide(DataType), 
partOfRulesRightSide(identifierVar));
insertMember(intKey, DeclareParam , 2, 
partOfRulesRightSide(DataType), 
partOfRulesRightSide(identifierVar));
insertMember(voidKey, FuncReturnColonType , 1, 
partOfRulesRightSide(voidKey));
insertMember(stringNullKey, FuncReturnColonType , 1, 
partOfRulesRightSide(DataType));
insertMember(floatNullKey, FuncReturnColonType , 1, 
partOfRulesRightSide(DataType));
insertMember(intNullKey, FuncReturnColonType , 1, 
partOfRulesRightSide(DataType));
insertMember(stringKey, FuncReturnColonType , 1, 
partOfRulesRightSide(DataType));
insertMember(floatKey, FuncReturnColonType , 1, 
partOfRulesRightSide(DataType));
insertMember(intKey, FuncReturnColonType , 1, 
partOfRulesRightSide(DataType));
insertMember(identifierFunc, FceCall , 4, 
partOfRulesRightSide(identifierFunc), 
partOfRulesRightSide(leftPar), 
partOfRulesRightSide(FirstFceParam), 
partOfRulesRightSide(rightPar));
insertMember(identifierFunc, FirstFceParam , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(CommaOrEpsParam));
insertMember(leftPar, FirstFceParam , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(CommaOrEpsParam));
insertMember(rightPar, FirstFceParam , 0);
insertMember(identifierVar, FirstFceParam , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(CommaOrEpsParam));
insertMember(floatLiteral, FirstFceParam , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(CommaOrEpsParam));
insertMember(stringLiteral, FirstFceParam , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(CommaOrEpsParam));
insertMember(integerLiteral, FirstFceParam , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(CommaOrEpsParam));
insertMember(nullKey, FirstFceParam , 2, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(CommaOrEpsParam));
insertMember(rightPar, CommaOrEpsParam , 0);
insertMember(comma, CommaOrEpsParam , 3, 
partOfRulesRightSide(comma), 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(CommaOrEpsParam));
insertMember(identifierFunc, Exp , 2, 
partOfRulesRightSide(FceCall), 
partOfRulesRightSide(Exp));
insertMember(leftPar, Exp , 4, 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(minusOp), 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(Exp));
insertMember(identifierVar, Exp , 2, 
partOfRulesRightSide(identifierVar), 
partOfRulesRightSide(Exp));
insertMember(floatLiteral, Exp , 2, 
partOfRulesRightSide(floatLiteral), 
partOfRulesRightSide(Exp));
insertMember(stringLiteral, Exp , 2, 
partOfRulesRightSide(stringLiteral), 
partOfRulesRightSide(Exp));
insertMember(integerLiteral, Exp , 2, 
partOfRulesRightSide(integerLiteral), 
partOfRulesRightSide(Exp));
insertMember(nullKey, Exp , 2, 
partOfRulesRightSide(nullKey), 
partOfRulesRightSide(Exp));
insertMember(stringNullKey, DataType , 1, 
partOfRulesRightSide(stringNullKey));
insertMember(floatNullKey, DataType , 1, 
partOfRulesRightSide(floatNullKey));
insertMember(intNullKey, DataType , 1, 
partOfRulesRightSide(intNullKey));
insertMember(stringKey, DataType , 1, 
partOfRulesRightSide(stringKey));
insertMember(floatKey, DataType , 1, 
partOfRulesRightSide(floatKey));
insertMember(intKey, DataType , 1, 
partOfRulesRightSide(intKey));
insertMember(identifierVar, DeclareVariable , 2, 
partOfRulesRightSide(identifierVar), 
partOfRulesRightSide(DefVarAss));
insertMember(semicolon, DefVarAss , 1, 
partOfRulesRightSide(semicolon));
insertMember(equals, DefVarAss , 3, 
partOfRulesRightSide(equals), 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(semicolon));
insertMember(ifKey, Condition , 8, 
partOfRulesRightSide(ifKey), 
partOfRulesRightSide(leftPar), 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(rightPar), 
partOfRulesRightSide(curlyBraceLeft), 
partOfRulesRightSide(FunctionBody), 
partOfRulesRightSide(curlyBraceRight), 
partOfRulesRightSide(ElseCond));
insertMember(ending, ElseCond , 0);
insertMember(semicolon, ElseCond , 0);
insertMember(curlyBraceRight, ElseCond , 0);
insertMember(functionKey, ElseCond , 0);
insertMember(identifierFunc, ElseCond , 0);
insertMember(leftPar, ElseCond , 0);
insertMember(identifierVar, ElseCond , 0);
insertMember(floatLiteral, ElseCond , 0);
insertMember(stringLiteral, ElseCond , 0);
insertMember(integerLiteral, ElseCond , 0);
insertMember(nullKey, ElseCond , 0);
insertMember(ifKey, ElseCond , 0);
insertMember(elseKey, ElseCond , 4, 
partOfRulesRightSide(elseKey), 
partOfRulesRightSide(curlyBraceLeft), 
partOfRulesRightSide(FunctionBody), 
partOfRulesRightSide(curlyBraceRight));
insertMember(whileKey, ElseCond , 0);
insertMember(returnKey, ElseCond , 0);
insertMember(whileKey, While , 7, 
partOfRulesRightSide(whileKey), 
partOfRulesRightSide(leftPar), 
partOfRulesRightSide(Exp), 
partOfRulesRightSide(rightPar), 
partOfRulesRightSide(curlyBraceLeft), 
partOfRulesRightSide(FunctionBody), 
partOfRulesRightSide(curlyBraceRight));
insertMember(returnKey, Return , 3, 
partOfRulesRightSide(returnKey), 
partOfRulesRightSide(ReturnExp), 
partOfRulesRightSide(semicolon));
insertMember(semicolon, ReturnExp , 0);
insertMember(identifierFunc, ReturnExp , 1, 
partOfRulesRightSide(Exp));
insertMember(leftPar, ReturnExp , 1, 
partOfRulesRightSide(Exp));
insertMember(identifierVar, ReturnExp , 1, 
partOfRulesRightSide(Exp));
insertMember(floatLiteral, ReturnExp , 1, 
partOfRulesRightSide(Exp));
insertMember(stringLiteral, ReturnExp , 1, 
partOfRulesRightSide(Exp));
insertMember(integerLiteral, ReturnExp , 1, 
partOfRulesRightSide(Exp));
insertMember(nullKey, ReturnExp , 1, 
partOfRulesRightSide(Exp));
insertMember(semicolon, FunctionBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(FunctionBody));
insertMember(curlyBraceRight, FunctionBody , 0);
insertMember(identifierFunc, FunctionBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(FunctionBody));
insertMember(leftPar, FunctionBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(FunctionBody));
insertMember(identifierVar, FunctionBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(FunctionBody));
insertMember(floatLiteral, FunctionBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(FunctionBody));
insertMember(stringLiteral, FunctionBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(FunctionBody));
insertMember(integerLiteral, FunctionBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(FunctionBody));
insertMember(nullKey, FunctionBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(FunctionBody));
insertMember(ifKey, FunctionBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(FunctionBody));
insertMember(whileKey, FunctionBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(FunctionBody));
insertMember(returnKey, FunctionBody , 2, 
partOfRulesRightSide(Command), 
partOfRulesRightSide(FunctionBody));
