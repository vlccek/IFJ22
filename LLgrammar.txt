## S - init stav
ProgramBody ::= FceDefine ProgramBody
ProgramBody ::= Command ProgramBody
ProgramBody ::= ''

## Command
Command ::= FceCall
Command ::= Ass
Command ::= Condition
Command ::= While
Command ::= return

sdf
## Definice funkcí
FceDefine ::= FceHeader leftCurlyBrace FunctionBody rightCurlyBrace
FceHeader ::= functionKey identifierFunc leftPar FunctionDeclareParams rightPar FuncReturnColonType
FunctionDeclareParams ::= ''
FunctionDeclareParams ::= DeclareParam  CommaOrEpsParams
CommaOrEpsParams ::= ''
CommaOrEpsParams ::= comma DeclareParam  CommaOrEpsParams
DeclareParam ::= DataType identifier

## FuncReturnType
FuncReturnColonType ::= colon DataType
FuncReturnColonType ::= colon voidKey

## Function call
FceCall ::= identifierFunc leftPar FceParams rightPar
FceParams ::= ''
FceParams ::= Exp CommaOrEps
CommaOrEps ::= ''
CommaOrEps ::= comma Exp CommaOrEps

## Exp
Exp ::= identifierVar
Exp ::= FceCall
Exp ::= floatLiteral
Exp ::= stringLiteral
Exp ::= integerLiteral
Exp ::= nullKey
Exp ::= Exp minusOp Exp
Exp ::= Exp plusOp Exp
Exp ::= Exp divisionOp Exp
Exp ::= Exp multiplicationOp Exp
Exp ::= Exp integerDivisionOp Exp
Exp ::= Exp concatenationOp Exp
Exp ::= leftPar Exp rightPar


## Data types DataType
DataType ::= stringNullKey
DataType ::= floatNullKey
DataType ::= intNullKey
DataType ::= stringKey
DataType ::= floatKey
DataType ::= intKey


## Definice proměné
DefVar ::=  identifierVar DefVarAss
DefVarAss ::= equals Exp semiColon
DefVarAss ::= semiColon

## Podmínky
Condition ::= ifKey leftPar Exp rightPar leftCurlyBrace FunctionBody rightCurlyBrace ElseCond
ElseCond ::= elseKey leftCurlyBrace FunctionBody rightCurlyBrace
ElseCond ::= ‘’

## While
While ::= whileKey leftPar Exp rightPar leftCurlyBrace FunctionBody rightCurlyBrace

## Return
Return ::= returnKey ReturnExp semiColon
ReturnExp ::= Exp
ReturnExp ::= ''

## Vnítřek funkce
FunctionBody ::= Command FunctionBody
FunctionBody ::= ''