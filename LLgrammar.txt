## S - init stav
ProgramBody ::= FceDefine ProgramBody
ProgramBody ::= Command ProgramBody
ProgramBody ::=''

## Command
Command ::= DeclareVariable
Command ::= Condition
Command ::= While
Command ::= Return
Command ::= Exp semicolon

## Definice funkcí
FceDefine ::= FceHeader curlyBraceLeft FunctionBody curlyBraceRight
FceHeader ::= functionKey identifierFunc leftPar FunctionDeclareParams rightPar colon FuncReturnColonType
FunctionDeclareParams ::=''
FunctionDeclareParams ::= DeclareParam  CommaOrEpsParams
CommaOrEpsParams ::=''
CommaOrEpsParams ::= comma DeclareParam  CommaOrEpsParams
DeclareParam ::= DataType identifierVar

## FuncReturnType
FuncReturnColonType ::= DataType
FuncReturnColonType ::= voidKey

## Function call
FceCall ::= identifierFunc leftPar FirstFceParam rightPar
FirstFceParam ::=''
FirstFceParam ::= Exp CommaOrEpsParam
CommaOrEpsParam ::=''
CommaOrEpsParam ::= comma Exp CommaOrEpsParam

## Exp
Exp ::= identifierVar
Exp ::= FceCall
Exp ::= floatLiteral
Exp ::= stringLiteral
Exp ::= integerLiteral
Exp ::= nullKey
Exp ::= Exp minusOp Exp
Exp ::= Exp plusOp Exp
Exp ::= Exp divisionOp Exp
Exp ::= Exp multiplicationOp Exp
Exp ::= Exp concatenationOp Exp
Exp ::= leftPar Exp rightPar


## Data types DataType
DataType ::= stringNullKey
DataType ::= floatNullKey
DataType ::= intNullKey
DataType ::= stringKey
DataType ::= floatKey
DataType ::= intKey


## Definice proměné
DeclareVariable ::=  identifierVar DefVarAss
DefVarAss ::= equals Exp semicolon
DefVarAss ::= semicolon

## Podmínky
Condition ::= ifKey leftPar Exp rightPar curlyBraceLeft FunctionBody curlyBraceRight ElseCond
ElseCond ::= elseKey curlyBraceLeft FunctionBody curlyBraceRight
ElseCond ::=''

## While
While ::= whileKey leftPar Exp rightPar curlyBraceLeft FunctionBody curlyBraceRight

## Return
Return ::= returnKey ReturnExp semicolon
ReturnExp ::= Exp
ReturnExp ::=''

## Vnítřek funkce
FunctionBody ::= Command FunctionBody
FunctionBody ::=''